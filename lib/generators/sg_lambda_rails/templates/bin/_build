#!/usr/bin/env bash
set -e

echo '== Simulate SAM Build Directory =='
RESOURCE="RailsLambda"
#SAM_TEMP=$(mktemp -d -t sam.XXXXXX)
#rm -rf ./.lamby ./.aws-sam
#cp -r . "$SAM_TEMP"
#mkdir -p ./.lamby
#cp -r "$SAM_TEMP" "./.lamby/$RESOURCE"
#pushd "./.lamby/$RESOURCE"

rm -rf ./.aws-sam
mkdir -p ./.lamby
rsync -r --delete --exclude='.git/**' --exclude='vendor/bundle/**' --exclude='node_modules/**' --filter=':- .gitignore' . "./.lamby/$RESOURCE/"
pushd "./.lamby/$RESOURCE"

echo '== Cleaning Dev Dependencies =='
rm -rf ./.bundle \
       ./vendor/bundle-dev

echo '== Bundle For Deployment =='
bundle lock --add-platform x86_64-linux
bundle config --local deployment true
bundle config --local without 'development test'
bundle config --local path './vendor/bundle'
bundle install --jobs 4 --clean

echo "== Environments & Configuration =="
rm -f ".env.$RAILS_ENV"
./bin/rails \
  -rlamby \
  lamby:ssm:dotenv \
  LAMBY_SSM_PARAMS_PATH="/<%= project_name %>/${RAILS_ENV}/env"

echo "== Asset Hosts & Precompiling =="
NODE_ENV='production' ./bin/rails assets:precompile

echo "== Cleanup Unused Files & Directories =="
rm -rf \
  log \
  spec \
  tmp
