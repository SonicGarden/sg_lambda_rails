#!/usr/bin/env bash
set -e

CLOUDFORMATION_BUCKET=$(cat .bucket-name)

# https://github.com/aws/aws-sam-cli/issues/2447
AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
IMAGE_REPOSITORY="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/<%= project_name %>"

./bin/_build

sam build \
  --parameter-overrides \
    RailsEnv="${RAILS_ENV}"

echo "== SAM package..."
sam package \
  --region "$AWS_DEFAULT_REGION" \
  --template-file ./.aws-sam/build/template.yaml \
  --output-template-file ./.aws-sam/build/packaged.yaml \
  --image-repository "$IMAGE_REPOSITORY" \
  --s3-bucket "${CLOUDFORMATION_BUCKET}" \
  --s3-prefix "<%= project_name %>-${RAILS_ENV}"

echo "== SAM deploy..."
sam deploy \
  --region "$AWS_DEFAULT_REGION" \
  --template-file ./.aws-sam/build/packaged.yaml \
  --stack-name "<%= project_name %>-${RAILS_ENV}" \
  --image-repository "$IMAGE_REPOSITORY" \
  --capabilities "CAPABILITY_IAM" \
  --parameter-overrides \
    RailsEnv="${RAILS_ENV}"

RAKE_LAMBDA_ID=$(aws cloudformation list-stack-resources --stack-name <%= project_name %>-${RAILS_ENV} --query 'StackResourceSummaries[?LogicalResourceId==`RakeLambda`][PhysicalResourceId][0]' --output text)
echo "== DB Migration..."
aws lambda invoke \
  --function-name $RAKE_LAMBDA_ID tmp/migration.out \
  --cli-binary-format raw-in-base64-out \
  --payload '{"task":"db:migrate"}' \
  --log-type Tail \
  --query 'LogResult' \
  --output text \
  | base64 -d
